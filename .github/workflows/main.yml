name: CI/CD Pipeline

on:
  push:
    tags:
      - 'v*'  # Trigger on push to tags that start with 'v', e.g., 'v1.0', 'v2.0.1'

jobs:
  build:
    runs-on: ubuntu-latest  # Use an Ubuntu runner to execute the steps

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js for both client and server
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '23'  # Change this to the version you're using

      # Step 3: Install frontend dependencies (React app)
      - name: Install frontend dependencies
        working-directory: ./client   # This points to the client directory
        run: |
          npm install

      # Step 4: Install backend dependencies (Node.js app)
      - name: Install backend dependencies
        working-directory: ./server   # This points to the server directory
        run: |
          npm install

      # Step 5: Build frontend (React app)
      - name: Build frontend
        working-directory: ./client
        run: |
          npm run build  # Create a production build (in the dist folder)

      # Step 6: Set Docker Tag from Git tag
      - name: Set Docker Tag
        run: |
          TAG=${GITHUB_REF#refs/tags/}  # Remove 'refs/tags/' from the tag name
          echo "TAG=$TAG" >> $GITHUB_ENV  # Set it as an environment variable

      # Step 7: Build Docker images for both frontend and backend

      # Build the frontend Docker image
      - name: Build frontend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-frontend:$TAG ./client  # Full image path with username

      # Build the backend Docker image
      - name: Build backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-backend:$TAG ./server  # Full image path with username

      # Step 8: Log in to Docker Hub and push both images

      - name: Log in to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # Push frontend Docker image
      - name: Push frontend Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/auth-frontend:$TAG  # Full image path with username

      # Push backend Docker image
      - name: Push backend Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/auth-backend:$TAG  # Full image path with username
